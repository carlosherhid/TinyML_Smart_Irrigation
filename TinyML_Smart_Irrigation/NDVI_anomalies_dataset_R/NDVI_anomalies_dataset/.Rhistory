TH_MO12$hum7 <- unlist(hum7)
TH_MO12$hum8 <- unlist(hum8)
TH_MO12$hum9 <- unlist(hum9)
TH_MO12$hum10 <- unlist(hum10)
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_temp <- select(TH_MO12, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_temp), ncol = 0))
for (i in 1:(ncol(med_temp)-1)) {
col_diff <- med_temp[,i] - med_temp[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MO12$mean_temp_last10 <- mean_diffs
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_hum <- select(TH_MO12, hum1, hum2, hum3, hum4, hum5, hum6, hum7, hum8, hum9, hum10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_hum), ncol = 0))
for (i in 1:(ncol(med_hum)-1)) {
col_diff <- med_hum[,i] - med_hum[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MO12$mean_hum_last10 <- mean_diffs
#Calculate column with mode of anomalies for each date.
#Select columns that start with 'anomaly'
anomalies_df <- dplyr::select(TH_MO12,contains("Anomaly_a"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
#TH_MO12$anomaliesAgg <-ONES / (ONES + ZEROS)
TH_MO12$anomaliesAgg <-ONES / unique(ONES+ZEROS+NAS)
TH_MO12$anomaliesAgg2 <-ONES / (ONES+ZEROS)
#Calculamos ahora el índice de anomalías del percentil 80 y 20, anomaliesAgg3
anomalies_df <- dplyr::select(TH_MO12,contains("Anomaly_b"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
TH_MO12$anomaliesAgg3 <-ONES / unique(ONES+ZEROS+NAS)
#We calculated it for all anomalies
anomaly_columns <- colnames(TH_MO12)[grepl("Anomaly_", colnames(TH_MO12))]
for (i in 1:length(percentile_98_to_60)) {
col_name <- paste("Anomaly_", i, sep = "")
agg_column_name <- paste(col_name, "Agg", sep = "")
anomalies_df <- dplyr::select(TH_MO12, contains(col_name))
ZEROS <- rowSums(anomalies_df == 0, na.rm = TRUE)
ONES <- rowSums(anomalies_df, na.rm = TRUE)
NAS <- rowSums(is.na(anomalies_df))
TH_MO12[[agg_column_name]] <- ONES / (ONES + ZEROS + NAS)
}
#Finally, we obtain the number of NDVI measurements for each date
TH_MO12$n_measurements <- (ONES+ZEROS)
colnames(TH_MO12)[1] <- "date"
write.table(x = TH_MO12, "anomaliesMO12.csv", row.names = F, sep=";")
################################################
# Dataset Estación MU21
################################################
################################################
#Adding the temperature and humidity values from the station, excluding the dates for which we don't have NDVI measurements.
################################################
ant_MU21 <- TH_MU21[1:10,]
TH_MU21 <- subset(TH_MU21, fecha %in% Date$Fecha)
TH_MU21 <- rbind(ant_MU21, TH_MU21)
auxx3 <- TH_MU21 #To use it and prevent accumulation during the merge.
id <- 0
for(contrato in contrato_MU21$Contrato) {
# print(contrato)
id <- id + 1
#We obtain the mean NDVI values for that park.
media <-
listDF2DF(S) %>%
dplyr::select(Contrato, Fecha, NDVI.scl_7_8_9.Mean) %>% na.omit() %>%
dplyr::filter(Contrato == contrato) %>%
dplyr::filter(Fecha %in% TH_MU21$fecha) %>% dplyr::select(Fecha,NDVI.scl_7_8_9.Mean)
#We obtain the two values that will indicate whether the NDVI values have been anomalous or not.
percentil_90 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.9, na.rm = TRUE)
percentil_10 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.1, na.rm = TRUE)
#We also add the anomalies for the 20th and 80th percentiles to have a different anomaly index.
percentil_80 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.8, na.rm = TRUE)
percentil_20 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.2, na.rm = TRUE)
#We add the two new columns to our dataset.
######################################################################################
#EVERY PERCENTILE
######################################################################################
# Vector with the desired percentiles
percentiles <- c(seq(0.98, 0.6, -0.01), seq(0.02, 0.4, 0.01))
# Vector to store the results
percentile_values <- vector("numeric", length(percentiles))
# Data
data <- media$NDVI.scl_7_8_9.Mean
# Calculate the percentiles and store the values in the vector
for (i in 1:length(percentiles)) {
percentile_values[i] <- quantile(x = data, probs = percentiles[i], na.rm = TRUE)
}
# Split the percentiles into two sets
percentile_98_to_60 <- percentile_values[percentiles >= 0.6 & percentiles <= 0.98]
percentile_2_to_40 <- percentile_values[percentiles >= 0.02 & percentiles <= 0.4]
x<-merge(auxx3, media, by.x = "fecha",by.y = "Fecha", all.x = TRUE) #We fill with NA when there are no NDVI values.
x <- x %>% dplyr::select(NDVI.scl_7_8_9.Mean)
anomalias <- matrix(0, ncol = length(percentile_98_to_60), nrow = nrow(x))
for (i in 1:length(percentile_98_to_60)) {
med <- x$NDVI.scl_7_8_9.Mean
anomalous <- (med >= percentile_98_to_60[i] | med <= percentile_2_to_40[i])
# Assign values directly to the corresponding column in the matrix
anomalias[, i] <- ifelse(is.na(med), NA, anomalous)
}
colnames(anomalias) <- paste("Anomaly_", 1:length(percentile_98_to_60), "_", id, sep = "")
#####################################################################################
#####################################################################################
x<-merge(auxx3, media, by.x = "fecha",by.y = "Fecha", all.x = TRUE) #We fill with NA when there are no NDVI values.
x <- x %>% dplyr::select(NDVI.scl_7_8_9.Mean)
TH_MU21$media <- x$NDVI.scl_7_8_9.Mean
anomalia <- list()
#For each of the NDVI measurements for each contract, we determine whether it's an anomalous measurement or not (if it belongs to the 90th or 10th percentile).
for(med in x$NDVI.scl_7_8_9.Mean){
if(is.na(med)){
anomalia <- append(anomalia,med)
}
else{
if(med >= percentil_90 || med <= percentil_10 ){ #If it belongs to the 90th or 10th percentile, then it is an anomalous value.
anomalia <- append(anomalia,1)
}
else{ #In any other case, it is not an anomalous NDVI value.
anomalia <-append(anomalia,0)
}
}
}
#We obtain the second type of anomaly.
anomalia2 <- list()
#For each of the NDVI measurements for each contract, we determine whether it's an anomalous measurement or not (if it belongs to the 90th or 10th percentile).
for(med in x$NDVI.scl_7_8_9.Mean){
if(is.na(med)){
anomalia2 <- append(anomalia2,med)
}
else{
if(med >= percentil_80 || med <= percentil_20 ){ #If it belongs to the 90th or 10th percentile, then it is an anomalous value.
anomalia2 <- append(anomalia2,1)
}
else{ #In any other case, it is not an anomalous NDVI value.
anomalia2 <-append(anomalia2,0)
}
}
}
TH_MU21$anomalia <- unlist(anomalia) #We add the anomalies to the dataset.
TH_MU21$anomalia2 <- unlist(anomalia2) #We add the anomalies to the dataset.
#To rename the added columns correctly.
columna_media <- paste("NDVI_mean_",id,sep = "")
columna_anomalia <- paste("Anomaly_a_", id,sep = "")
columna_anomalia2 <- paste("Anomaly_b_", id,sep = "")
#we rename them
names(TH_MU21)[names(TH_MU21) == "media"] <- columna_media
names(TH_MU21)[names(TH_MU21) == "anomalia"] <- columna_anomalia
names(TH_MU21)[names(TH_MU21) == "anomalia2"] <- columna_anomalia2
# Convert the matrix to a data frame
anomalias_df <- as.data.frame(anomalias)
# Add the columns to the dataset
TH_MU21 <- cbind(TH_MU21, anomalias_df)
}
#We add the previous 10 temperature and humidity measurements as columns for each date.
hum1 <- list()
hum2 <- list()
hum3 <- list()
hum4 <- list()
hum5 <- list()
hum6 <- list()
hum7 <- list()
hum8 <- list()
hum9 <- list()
hum10 <- list()
temp1 <- list()
temp2 <- list()
temp3 <- list()
temp4 <- list()
temp5 <- list()
temp6 <- list()
temp7 <- list()
temp8 <- list()
temp9 <- list()
temp10 <- list()
for(i in 1:nrow(TH_MU21)){
if(i>10){#The first 10 measurements were only used to retain data.
#We add the previous 10 humidity measurements.
hum1 <- append(hum1,TH_MU21$hrmed[i-1])
hum2 <- append(hum2,TH_MU21$hrmed[i-2])
hum3 <- append(hum3,TH_MU21$hrmed[i-3])
hum4 <- append(hum4,TH_MU21$hrmed[i-4])
hum5 <- append(hum5,TH_MU21$hrmed[i-5])
hum6 <- append(hum6,TH_MU21$hrmed[i-6])
hum7 <- append(hum7,TH_MU21$hrmed[i-7])
hum8 <- append(hum8,TH_MU21$hrmed[i-8])
hum9 <- append(hum9,TH_MU21$hrmed[i-9])
hum10 <- append(hum10,TH_MU21$hrmed[i-10])
#We add the previous 10 temperature measurements.
temp1 <- append(temp1,TH_MU21$tmed[i-1])
temp2 <- append(temp2,TH_MU21$tmed[i-2])
temp3 <- append(temp3,TH_MU21$tmed[i-3])
temp4 <- append(temp4,TH_MU21$tmed[i-4])
temp5 <- append(temp5,TH_MU21$tmed[i-5])
temp6 <- append(temp6,TH_MU21$tmed[i-6])
temp7 <- append(temp7,TH_MU21$tmed[i-7])
temp8 <- append(temp8,TH_MU21$tmed[i-8])
temp9 <- append(temp9,TH_MU21$tmed[i-9])
temp10 <- append(temp10,TH_MU21$tmed[i-10])
}
}
TH_MU21 <- TH_MU21[11:nrow(TH_MU21),] #We remove the 10 unnecessary rows for which there are no NDVI measurements.
#We add the previous 20 columns to the dataframe.
TH_MU21$temp1 <- unlist(temp1)
TH_MU21$temp2 <- unlist(temp2)
TH_MU21$temp3 <- unlist(temp3)
TH_MU21$temp4 <- unlist(temp4)
TH_MU21$temp5 <- unlist(temp5)
TH_MU21$temp6 <- unlist(temp6)
TH_MU21$temp7 <- unlist(temp7)
TH_MU21$temp8 <- unlist(temp8)
TH_MU21$temp9 <- unlist(temp9)
TH_MU21$temp10 <- unlist(temp10)
TH_MU21$hum1 <- unlist(hum1)
TH_MU21$hum2 <- unlist(hum2)
TH_MU21$hum3 <- unlist(hum3)
TH_MU21$hum4 <- unlist(hum4)
TH_MU21$hum5 <- unlist(hum5)
TH_MU21$hum6 <- unlist(hum6)
TH_MU21$hum7 <- unlist(hum7)
TH_MU21$hum8 <- unlist(hum8)
TH_MU21$hum9 <- unlist(hum9)
TH_MU21$hum10 <- unlist(hum10)
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_temp <- select(TH_MU21, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_temp), ncol = 0))
for (i in 1:(ncol(med_temp)-1)) {
col_diff <- med_temp[,i] - med_temp[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MU21$mean_temp_last10 <- mean_diffs
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_hum <- select(TH_MU21, hum1, hum2, hum3, hum4, hum5, hum6, hum7, hum8, hum9, hum10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_hum), ncol = 0))
for (i in 1:(ncol(med_hum)-1)) {
col_diff <- med_hum[,i] - med_hum[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MU21$mean_hum_last10 <- mean_diffs
#Calculate column with mode of anomalies for each date.
#Select columns that start with 'anomaly'
anomalies_df <- dplyr::select(TH_MU21,contains("Anomaly_a"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
#TH_MU21$anomaliesAgg <-ONES / (ONES + ZEROS)
TH_MU21$anomaliesAgg <-ONES / unique(ONES+ZEROS+NAS)
TH_MU21$anomaliesAgg2 <-ONES / (ONES+ZEROS)
#Calculamos ahora el índice de anomalías del percentil 80 y 20, anomaliesAgg3
anomalies_df <- dplyr::select(TH_MU21,contains("Anomaly_b"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
TH_MU21$anomaliesAgg3 <-ONES / unique(ONES+ZEROS+NAS)
#We calculated it for all anomalies
anomaly_columns <- colnames(TH_MO12)[grepl("Anomaly_", colnames(TH_MU21))]
for (i in 1:length(percentile_98_to_60)) {
col_name <- paste("Anomaly_", i, sep = "")
agg_column_name <- paste(col_name, "Agg", sep = "")
anomalies_df <- dplyr::select(TH_MU21, contains(col_name))
ZEROS <- rowSums(anomalies_df == 0, na.rm = TRUE)
ONES <- rowSums(anomalies_df, na.rm = TRUE)
NAS <- rowSums(is.na(anomalies_df))
TH_MU21[[agg_column_name]] <- ONES / (ONES + ZEROS + NAS)
}
#Finally, we obtain the number of NDVI measurements for each date
TH_MU21$n_measurements <- (ONES+ZEROS)
colnames(TH_MU21)[1] <- "date"
write.table(x = TH_MU21, "anomaliesMU21.csv", row.names = F, sep=";")
################################################
# Dataset Estación MU62
################################################
################################################
#Adding the temperature and humidity values from the station, excluding the dates for which we don't have NDVI measurements.
################################################
ant_MU62 <- TH_MU62[1:10,]
TH_MU62 <- subset(TH_MU62, fecha %in% Date$Fecha)
TH_MU62 <- rbind(ant_MU62, TH_MU62)
auxx3 <- TH_MU62 #To use it and prevent accumulation during the merge.
id <- 0
for(contrato in contrato_MU62$Contrato) {
# print(contrato)
id <- id + 1
#We obtain the mean NDVI values for that park.
media <-
listDF2DF(S) %>%
dplyr::select(Contrato, Fecha, NDVI.scl_7_8_9.Mean) %>% na.omit() %>%
dplyr::filter(Contrato == contrato) %>%
dplyr::filter(Fecha %in% TH_MU62$fecha) %>% dplyr::select(Fecha,NDVI.scl_7_8_9.Mean)
#We obtain the two values that will indicate whether the NDVI values have been anomalous or not.
percentil_90 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.9, na.rm = TRUE)
percentil_10 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.1, na.rm = TRUE)
#We also add the anomalies for the 20th and 80th percentiles to have a different anomaly index.
percentil_80 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.8, na.rm = TRUE)
percentil_20 <- quantile(x=media$NDVI.scl_7_8_9.Mean, probs = 0.2, na.rm = TRUE)
#We add the two new columns to our dataset.
######################################################################################
#EVERY PERCENTILE
######################################################################################
# Vector with the desired percentiles
percentiles <- c(seq(0.98, 0.6, -0.01), seq(0.02, 0.4, 0.01))
# Vector to store the results
percentile_values <- vector("numeric", length(percentiles))
# Data
data <- media$NDVI.scl_7_8_9.Mean
# Calculate the percentiles and store the values in the vector
for (i in 1:length(percentiles)) {
percentile_values[i] <- quantile(x = data, probs = percentiles[i], na.rm = TRUE)
}
# Split the percentiles into two sets
percentile_98_to_60 <- percentile_values[percentiles >= 0.6 & percentiles <= 0.98]
percentile_2_to_40 <- percentile_values[percentiles >= 0.02 & percentiles <= 0.4]
x<-merge(auxx3, media, by.x = "fecha",by.y = "Fecha", all.x = TRUE) #We fill with NA when there are no NDVI values.
x <- x %>% dplyr::select(NDVI.scl_7_8_9.Mean)
anomalias <- matrix(0, ncol = length(percentile_98_to_60), nrow = nrow(x))
for (i in 1:length(percentile_98_to_60)) {
med <- x$NDVI.scl_7_8_9.Mean
anomalous <- (med >= percentile_98_to_60[i] | med <= percentile_2_to_40[i])
# Assign values directly to the corresponding column in the matrix
anomalias[, i] <- ifelse(is.na(med), NA, anomalous)
}
colnames(anomalias) <- paste("Anomaly_", 1:length(percentile_98_to_60), "_", id, sep = "")
#####################################################################################
#####################################################################################
x<-merge(auxx3, media, by.x = "fecha",by.y = "Fecha", all.x = TRUE) #We fill with NA when there are no NDVI values.
x <- x %>% dplyr::select(NDVI.scl_7_8_9.Mean)
TH_MU62$media <- x$NDVI.scl_7_8_9.Mean
anomalia <- list()
#For each of the NDVI measurements for each contract, we determine whether it's an anomalous measurement or not (if it belongs to the 90th or 10th percentile).
for(med in x$NDVI.scl_7_8_9.Mean){
if(is.na(med)){
anomalia <- append(anomalia,med)
}
else{
if(med >= percentil_90 || med <= percentil_10 ){ #If it belongs to the 90th or 10th percentile, then it is an anomalous value.
anomalia <- append(anomalia,1)
}
else{ #In any other case, it is not an anomalous NDVI value.
anomalia <-append(anomalia,0)
}
}
}
#We obtain the second type of anomaly.
anomalia2 <- list()
#For each of the NDVI measurements for each contract, we determine whether it's an anomalous measurement or not (if it belongs to the 90th or 10th percentile).
for(med in x$NDVI.scl_7_8_9.Mean){
if(is.na(med)){
anomalia2 <- append(anomalia2,med)
}
else{
if(med >= percentil_80 || med <= percentil_20 ){ #If it belongs to the 90th or 10th percentile, then it is an anomalous value.
anomalia2 <- append(anomalia2,1)
}
else{ #In any other case, it is not an anomalous NDVI value.
anomalia2 <-append(anomalia2,0)
}
}
}
TH_MU62$anomalia <- unlist(anomalia) #We add the anomalies to the dataset.
TH_MU62$anomalia2 <- unlist(anomalia2) #We add the anomalies to the dataset.
#To rename the added columns correctly.
columna_media <- paste("NDVI_mean_",id,sep = "")
columna_anomalia <- paste("Anomaly_a_", id,sep = "")
columna_anomalia2 <- paste("Anomaly_b_", id,sep = "")
#we rename them
names(TH_MU62)[names(TH_MU62) == "media"] <- columna_media
names(TH_MU62)[names(TH_MU62) == "anomalia"] <- columna_anomalia
names(TH_MU62)[names(TH_MU62) == "anomalia2"] <- columna_anomalia2
# Convert the matrix to a data frame
anomalias_df <- as.data.frame(anomalias)
# Add the columns to the dataset
TH_MU62 <- cbind(TH_MU62, anomalias_df)
}
#We add the previous 10 temperature and humidity measurements as columns for each date.
hum1 <- list()
hum2 <- list()
hum3 <- list()
hum4 <- list()
hum5 <- list()
hum6 <- list()
hum7 <- list()
hum8 <- list()
hum9 <- list()
hum10 <- list()
temp1 <- list()
temp2 <- list()
temp3 <- list()
temp4 <- list()
temp5 <- list()
temp6 <- list()
temp7 <- list()
temp8 <- list()
temp9 <- list()
temp10 <- list()
for(i in 1:nrow(TH_MU62)){
if(i>10){#The first 10 measurements were only used to retain data.
#We add the previous 10 humidity measurements.
hum1 <- append(hum1,TH_MU62$hrmed[i-1])
hum2 <- append(hum2,TH_MU62$hrmed[i-2])
hum3 <- append(hum3,TH_MU62$hrmed[i-3])
hum4 <- append(hum4,TH_MU62$hrmed[i-4])
hum5 <- append(hum5,TH_MU62$hrmed[i-5])
hum6 <- append(hum6,TH_MU62$hrmed[i-6])
hum7 <- append(hum7,TH_MU62$hrmed[i-7])
hum8 <- append(hum8,TH_MU62$hrmed[i-8])
hum9 <- append(hum9,TH_MU62$hrmed[i-9])
hum10 <- append(hum10,TH_MU62$hrmed[i-10])
#We add the previous 10 temperature measurements.
temp1 <- append(temp1,TH_MU62$tmed[i-1])
temp2 <- append(temp2,TH_MU62$tmed[i-2])
temp3 <- append(temp3,TH_MU62$tmed[i-3])
temp4 <- append(temp4,TH_MU62$tmed[i-4])
temp5 <- append(temp5,TH_MU62$tmed[i-5])
temp6 <- append(temp6,TH_MU62$tmed[i-6])
temp7 <- append(temp7,TH_MU62$tmed[i-7])
temp8 <- append(temp8,TH_MU62$tmed[i-8])
temp9 <- append(temp9,TH_MU62$tmed[i-9])
temp10 <- append(temp10,TH_MU62$tmed[i-10])
}
}
TH_MU62 <- TH_MU62[11:nrow(TH_MU62),] #We remove the 10 unnecessary rows for which there are no NDVI measurements.
#We add the previous 20 columns to the dataframe.
TH_MU62$temp1 <- unlist(temp1)
TH_MU62$temp2 <- unlist(temp2)
TH_MU62$temp3 <- unlist(temp3)
TH_MU62$temp4 <- unlist(temp4)
TH_MU62$temp5 <- unlist(temp5)
TH_MU62$temp6 <- unlist(temp6)
TH_MU62$temp7 <- unlist(temp7)
TH_MU62$temp8 <- unlist(temp8)
TH_MU62$temp9 <- unlist(temp9)
TH_MU62$temp10 <- unlist(temp10)
TH_MU62$hum1 <- unlist(hum1)
TH_MU62$hum2 <- unlist(hum2)
TH_MU62$hum3 <- unlist(hum3)
TH_MU62$hum4 <- unlist(hum4)
TH_MU62$hum5 <- unlist(hum5)
TH_MU62$hum6 <- unlist(hum6)
TH_MU62$hum7 <- unlist(hum7)
TH_MU62$hum8 <- unlist(hum8)
TH_MU62$hum9 <- unlist(hum9)
TH_MU62$hum10 <- unlist(hum10)
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_temp <- select(TH_MU62, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_temp), ncol = 0))
for (i in 1:(ncol(med_temp)-1)) {
col_diff <- med_temp[,i] - med_temp[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MU62$mean_temp_last10 <- mean_diffs
#Now we calculate a column that contains the average temperature difference between a day and its following day over the last ten days (relative to the date in the row).
med_hum <- select(TH_MU62, hum1, hum2, hum3, hum4, hum5, hum6, hum7, hum8, hum9, hum10)
# Calculate the absolute differences between the columns.
diff_df <- data.frame(matrix(nrow = nrow(med_hum), ncol = 0))
for (i in 1:(ncol(med_hum)-1)) {
col_diff <- med_hum[,i] - med_hum[,i+1]
diff_df <- cbind(diff_df, col_diff)
}
abs_diffs <- abs(diff_df)
# Calculate the mean of the absolute differences of each pair of columns
mean_diffs <- rowMeans(abs_diffs)
TH_MU62$mean_hum_last10 <- mean_diffs
#Calculate column with mode of anomalies for each date.
#Select columns that start with 'anomaly'
anomalies_df <- dplyr::select(TH_MU62,contains("Anomaly_a"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
#TH_MU62$anomaliesAgg <-ONES / (ONES + ZEROS)
TH_MU62$anomaliesAgg <-ONES / unique(ONES+ZEROS+NAS)
TH_MU62$anomaliesAgg2 <-ONES / (ONES+ZEROS)
#Calculamos ahora el índice de anomalías del percentil 80 y 20, anomaliesAgg3
anomalies_df <- dplyr::select(TH_MU62,contains("Anomaly_b"))
ZEROS = rowSums(anomalies_df == 0, na.rm = T) # number of ceros
ONES = rowSums(anomalies_df, na.rm=T)        # number of ones
NAS = rowSums(is.na(anomalies_df))          # number of NAs
TH_MU62$anomaliesAgg3 <-ONES / unique(ONES+ZEROS+NAS)
#We calculated it for all anomalies
anomaly_columns <- colnames(TH_MU62)[grepl("Anomaly_", colnames(TH_MU62))]
for (i in 1:length(percentile_98_to_60)) {
col_name <- paste("Anomaly_", i, sep = "")
agg_column_name <- paste(col_name, "Agg", sep = "")
anomalies_df <- dplyr::select(TH_MU62, contains(col_name))
ZEROS <- rowSums(anomalies_df == 0, na.rm = TRUE)
ONES <- rowSums(anomalies_df, na.rm = TRUE)
NAS <- rowSums(is.na(anomalies_df))
TH_MU62[[agg_column_name]] <- ONES / (ONES + ZEROS + NAS)
}
#Finally, we obtain the number of NDVI measurements for each date
TH_MU62$n_measurements <- (ONES+ZEROS)
colnames(TH_MU62)[1] <- "date"
write.table(x = TH_MU62, "anomaliesMU62.csv", row.names = F, sep=";")
